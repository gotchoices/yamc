#!/bin/bash
# postgresql/access - Apply locally edited PostgreSQL access configuration
#
# This script applies the pg_hba.conf file that was edited locally
# to the remote PostgreSQL installation.
#
# Usage: yamc -h hostname -u root postgresql access

set -e  # Exit on any error

echo "===== Applying PostgreSQL Access Configuration ====="

# Get variables from local script
PG_CONFIG_DIR="${PG_CONFIG_DIR}"
PG_HBA_FILE="${PG_HBA_FILE}"
PG_HBA_MODIFIED="${PG_HBA_MODIFIED:-no}"

# If paths weren't passed from the local script, determine them
if [ -z "$PG_HBA_FILE" ]; then
  # Find PostgreSQL version and data directory
  PG_VER=$(psql --version | grep -oP 'psql \(PostgreSQL\) \K[0-9]+' || echo "13")
  PG_CONFIG_DIR="/etc/postgresql/${PG_VER}/main"
  PG_HBA_FILE="${PG_CONFIG_DIR}/pg_hba.conf"
fi

# Verify that the configuration file exists
if [ ! -f "$PG_HBA_FILE" ]; then
  echo "ERROR: PostgreSQL configuration file not found at: $PG_HBA_FILE"
  echo "Is PostgreSQL installed correctly?"
  exit 1
fi

echo "Found PostgreSQL configuration at: $PG_HBA_FILE"

# Check if the file was modified locally
if [ "$PG_HBA_MODIFIED" = "no" ]; then
  echo "No changes were made to the configuration file."
  echo "Configuration remains unchanged."
  exit 0
fi

# Create a backup of the current file before replacing it
echo "Creating backup of current configuration..."
BACKUP_FILE="${PG_HBA_FILE}.$(date +%Y%m%d%H%M%S).bak"
cp "$PG_HBA_FILE" "$BACKUP_FILE"
echo "Backup created at: $BACKUP_FILE"

# Copy the locally edited file to the actual location
echo "Applying configuration changes..."
cp "$MOD_TMP/postgresql_config/pg_hba.conf" "$PG_HBA_FILE"

# Set proper ownership and permissions
echo "Setting proper permissions..."
chown postgres:postgres "$PG_HBA_FILE"
chmod 640 "$PG_HBA_FILE"

# Reload PostgreSQL to apply changes
echo "Reloading PostgreSQL to apply changes..."
systemctl reload postgresql

echo "===== PostgreSQL Access Configuration Updated ====="
echo "Your changes have been applied and PostgreSQL has been reloaded."
echo "You can verify connections using: psql -U username databasename"
echo ""
exit 0